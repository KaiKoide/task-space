generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Group {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @db.Timestamp(6)
  name      String
  createdBy String
  Task      Task[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Status {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @db.Timestamp(6)
  status    String
  createdBy String?
  Task      Task[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Task {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt   DateTime @db.Timestamp(6)
  title       String
  description String?
  dueDate     DateTime @db.Timestamp(6)
  createdBy   String
  groupId     String   @db.Uuid
  statusId    String   @db.Uuid
  Group       Group    @relation(fields: [groupId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Status      Status   @relation(fields: [statusId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  id        String   @id(map: "user_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  name      String   @db.VarChar
  email     String   @db.VarChar
  password  String   @db.VarChar
}
